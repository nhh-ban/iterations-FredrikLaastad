to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url)
View(test)
test <- stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url)
View(test)
test2 <- transform_volumes(test)
View(test2)
transform_volumes <-function(data){
names(data$trafficData$volume$byHour$edges[[1]]) %>%
map(as_tibble)
}
test2 <- transform_volumes(test)
View(test2)
transform_volumes <-function(data){
names(data$trafficData$volume$byHour$edges[[1]])$node %>%
map(as_tibble)
}
test2 <- transform_volumes(test)
transform_volumes <-function(data){
names(data$trafficData$volume$byHour$edges[[1]]).node %>%
transform_volumes <-function(data){
names(data$trafficData$volume$byHour$edges[[1]]].node %>%
}
}
}
transform_volumes <-function(data){
names(data$trafficData$volume$byHour$edges[[1]]) %>%
map(as_tibble)
}
test2 <- transform_volumes(test)
transform_volumes <-function(data){
names(data$trafficData$volume$byHour$edges[[1]]$[1]) %>%
transform_volumes <-function(data){
names(data$trafficData$volume$byHour$edges[[1]]) %>%
map_chr(as_tibble)
}
test2 <- transform_volumes(test)
test2$node
test2[1]$node
test2[[1]]$node
test2[[1]].node
test2[[1]][node]
test2[[1]][$node]
test2[[1]][node]
View(test2)
transform_volumes <-function(data){
names(data$trafficData$volume$byHour) %>%
map_chr(as_tibble)
}
View(test2)
test2 <- transform_volumes(test)
transform_volumes <-function(data){
names(data$trafficData$volume$byHour) %>%
map(as_tibble)
}
test2 <- transform_volumes(test)
View(test2)
transform_volumes <-function(data){
names(data$trafficData$volume$byHour$edges$node) %>%
map(as_tibble)
}
test2 <- transform_volumes(test)
View(test2)
test2 <- transform_volumes(test)
View(test2)
View(test)
edge_node <- test$data$trafficData$volume$byHour$edges[[1]]
edge_node <- test$data$trafficData$volume$byHour
edge_node <- test
edge_node <- test[]
edge_node <- tibble(test)
View(edge_node)
edge_node <- tibble(test$trafficData$volume$byHour)
edge_node <- tibble(test$trafficData$volume$byHour$edges)
View(edge_node)
View(edge_node)
edge_node <- tibble(test$trafficData$volume$byHour$edges$node)
edge_node <- tibble(test$trafficData$volume$byHour$edges[[1]]$node)
View(edge_node)
edge_node <- tibble(test$trafficData$volume$byHour$edges)
View(edge_node)
test2[to,from,volume]
test2<- df[to,from,volume]
test2 <- df["to","from","volume"]
View(edge_node)
View(edge_node)
edge_
edge_node[1]
edge_node[1]$node
View(edge_node)
for (i in edge_node){
map(as_tibble) %>%
list_rbind()
}
transform_volumes <-function(data){
names(data$trafficData$volume$byHour$edges$node) %>%
map(as_tibble)
list_rbind()
}
transform_volumes <-function(data){
names(data$trafficData$volume$byHour$edges$node) %>%
map(as_tibble)
list_rbind()
}
View(edge_node)
edge_node <- (test$trafficData$volume$byHour$edges) %>%
map(as_tibble) %>%
list_rbind()
View(edge_node)
edge_node <- (test$trafficData$volume$byHour) %>%
map(as_tibble) %>%
list_rbind()
edge_node <- (test$trafficData$volume$byHour) %>%
map(as_tibble) %>%
list_rbind()
View(edge_node)
transform_volumes <-function(data){
names(data$trafficData$volume$byHour$edges$node) %>%
map(as_tibble)
list_rbind()
}
df <- transform_volumes(test)
transform_volumes <-function(data){
names(data$trafficData$volume$byHour$edges$node) %>%
map(as_tibble) %>%
list_rbind()
}
df <- transform_volumes(test)
transform_volumes <-function(data){
names(data$trafficData$volume$byHour$edges) %>%
map(as_tibble) %>%
list_rbind()
}
df <- transform_volumes(test)
transform_volumes <-function(data){
names(data$trafficData$volume$byHour$edges[[1]]) %>%
map(as_tibble) %>%
list_rbind()
}
df <- transform_volumes(test)
View(df)
df <- transform_volumes(test)$node
df <- transform_volumes(test)$node
View(test)
View(test)
}
transform_volumes <-function(data){
names(data$trafficData$volume$byHour$edges) %>%
map(as_tibble) %>%
list_rbind()
}
df <- transform_volumes(test)
View(df)
edge_node <- tibble(test$trafficData$volume$byHour$edges)
edge_node <- tibble(test$trafficData$volume$byHour$edges) %>%
list_rbind()
test2 <- for (i in edge_node){
list_rbind(i)
}
test2 <- for (i in edge_node){
rbind(i)
}
test2 <- edge_node %>%
map(as_tibble)
View(edge_node)
# Locate the relevant information
edge_node <- temp_df$trafficData$volume$byHour$edges
# Locate the relevant information
edge_node <- test$trafficData$volume$byHour$edges
# Locate the relevant information
edge_nodes <- test$trafficData$volume$byHour$edges
# repeat for every row in the data
for (i in edge_nodes) {
x <- i %>%
# clean the data for one row
map(as_tibble) %>%
list_rbind() %>%
mutate(from = map_chr(from,1, .default = NA_character_)) %>%
mutate(from = as_datetime(from, tz = "UTC")) %>%
mutate(to = map_chr(to,1, .default = NA_character_)) %>%
mutate(to = as_datetime(to, tz = "UTC")) %>%
unnest_wider(total)
# Append the results
df <- rbind(df, x)
}
View(df)
transform_volumes <-function(data){
# Locate the relevant information
edge_nodes <- test$trafficData$volume$byHour$edges
# repeat for every row in the data
for (i in edge_nodes) {
x <- i %>%
# clean the data for one row
map(as_tibble) %>%
list_rbind() %>%
mutate(from = map_chr(from,1, .default = NA_character_)) %>%
mutate(from = as_datetime(from, tz = "UTC")) %>%
mutate(to = map_chr(to,1, .default = NA_character_)) %>%
mutate(to = as_datetime(to, tz = "UTC")) %>%
unnest_wider(total)
# Append the results
df <- rbind(df, x)
return(df)
}
}
# Load function for posting GQL-queries and retrieving data:
source("functions/GQL_function.r")
library(httr)
library(jsonlite)
library(ggplot2)
library(DescTools)
library(tidyverse)
library(magrittr)
library(rlang)
library(lubridate)
library(anytime)
library(readr)
library(yaml)
library(glue)
configs <-
read_yaml("vegvesen_configs.yml")
gql_metadata_qry <- read_file("gql-queries/station_metadata.gql")
stations_metadata <-
GQL(
query=gql_metadata_qry,
.url = configs$vegvesen_url
)
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
#### 3: Testing metadata
source("functions/data_tests.r")
test_stations_metadata(stations_metadata_df)
#### 4: Query test
source("gql-queries/vol_qry.r")
GQL(
vol_qry(
id=stations_metadata_df$id[1],
from=to_iso8601(stations_metadata_df$latestData[1],-4),
to=to_iso8601(stations_metadata_df$latestData[1],0)
),
.url = configs$vegvesen_url
)
source("gql-queries/vol_qry.r")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic()
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic()
transform_volumes <-function(data){
# Locate the relevant information
edge_nodes <- data$trafficData$volume$byHour$edges
# repeat for every row in the data
for (i in edge_nodes) {
x <- i %>%
# clean the data for one row
map(as_tibble) %>%
list_rbind() %>%
mutate(from = map_chr(from,1, .default = NA_character_)) %>%
mutate(from = as_datetime(from, tz = "UTC")) %>%
mutate(to = map_chr(to,1, .default = NA_character_)) %>%
mutate(to = as_datetime(to, tz = "UTC")) %>%
unnest_wider(total)
# Append the results
df <- rbind(df, x)
return(df)
}
}
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic()
test <- stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url)
View(stations_metadata_df)
transform_volumes(test) %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic()
transform_volumes(test)
# Locate the relevant information
edge_nodes <- data$trafficData$volume$byHour$edges
# Locate the relevant information
edge_nodes <- data$trafficData$volume$byHour$edges
transform_volumes(test)
View(test)
# Locate the relevant information
edge_nodes <- test$trafficData$volume$byHour$edges
transform_volumes <-function(data){
# Locate the relevant information
edge_nodes <- test$trafficData$volume$byHour$edges
# repeat for every row in the data
for (i in edge_nodes) {
x <- i %>%
# clean the data for one row
map(as_tibble) %>%
list_rbind() %>%
mutate(from = map_chr(from,1, .default = NA_character_)) %>%
mutate(from = as_datetime(from, tz = "UTC")) %>%
mutate(to = map_chr(to,1, .default = NA_character_)) %>%
mutate(to = as_datetime(to, tz = "UTC")) %>%
unnest_wider(total)
# Append the results
df <- rbind(df, x)
return(df)
}
}
View(edge_nodes)
transform_volumes(test)
edge_nodes <- test$trafficData$volume$byHour$edges
for (i in edge_nodes) {
x <- i %>%
# clean the data for one row
map(as_tibble) %>%
list_rbind() %>%
mutate(from = map_chr(from,1, .default = NA_character_)) %>%
mutate(from = as_datetime(from, tz = "UTC")) %>%
mutate(to = map_chr(to,1, .default = NA_character_)) %>%
mutate(to = as_datetime(to, tz = "UTC")) %>%
unnest_wider(total)
for (i in edge_nodes) {
x <- i %>%
# clean the data for one row
map(as_tibble) %>%
list_rbind() %>%
mutate(from = map_chr(from,1, .default = NA_character_)) %>%
mutate(from = as_datetime(from, tz = "UTC")) %>%
mutate(to = map_chr(to,1, .default = NA_character_)) %>%
mutate(to = as_datetime(to, tz = "UTC")) %>%
unnest_wider(total)
# Append the results
df <- rbind(df, x)
return(df)
}
transform_volumes <-function(data){
# Locate the relevant information
edge_nodes <- data$trafficData$volume$byHour$edges
# repeat for every row in the data
for (i in edge_nodes) {
x <- i %>%
# clean the data for one row
map(as_tibble) %>%
list_rbind() %>%
mutate(from = map_chr(from,1, .default = NA_character_)) %>%
mutate(from = as_datetime(from, tz = "UTC")) %>%
mutate(to = map_chr(to,1, .default = NA_character_)) %>%
mutate(to = as_datetime(to, tz = "UTC")) %>%
unnest_wider(total)
# Append the results
df <- rbind(df, x)
return(df)
}
}
View(edge_nodes)
View(edge_nodes)
transform_volumes(test)
df <- transform_volumes(test)
df2 <- transform_volumes(test)
transform_volumes <-function(data){
# Locate the relevant information
edge_nodes <- data$trafficData$volume$byHour$edges
# repeat for every row in the data
for (i in edge_nodes) {
x <- i %>%
# clean the data for one row
map(as_tibble) %>%
list_rbind() %>%
mutate(from = map_chr(from,1, .default = NA_character_)) %>%
mutate(from = as_datetime(from, tz = "UTC")) %>%
mutate(to = map_chr(to,1, .default = NA_character_)) %>%
mutate(to = as_datetime(to, tz = "UTC")) %>%
unnest_wider(total)
# Append the results
df <- rbind(df, x)
return(df)
}
}
df2 <- transform_volumes(test)
edge_nodes <- test$trafficData$volume$byHour$edges
transform_volumes <-function(data){
# Locate the relevant information
edge_nodes <- data$trafficData$volume$byHour$edges
# repeat for every row in the data
for (i in edge_nodes) {
x <- i %>%
# clean the data for one row
map(as_tibble) %>%
list_rbind() %>%
mutate(from = map_chr(from,1, .default = NA_character_)) %>%
mutate(from = as_datetime(from, tz = "UTC")) %>%
mutate(to = map_chr(to,1, .default = NA_character_)) %>%
mutate(to = as_datetime(to, tz = "UTC")) %>%
unnest_wider(total)
# Append the results
df <- rbind(df, x)
return(df)
}
}
transform_volumes(test)
transform_volumes <-function(data){
# Locate the relevant information
edge_nodes <- data$trafficData$volume$byHour$edges
# repeat for every row in the data
for (i in edge_nodes) {
x <- i %>%
# clean the data for one row
map(as_tibble) %>%
list_rbind() %>%
mutate(from = map_chr(from,1, .default = NA_character_)) %>%
mutate(from = as_datetime(from, tz = "UTC")) %>%
mutate(to = map_chr(to,1, .default = NA_character_)) %>%
mutate(to = as_datetime(to, tz = "UTC")) %>%
unnest_wider(total)
# Append the results
df <- rbind(df, x)
return(df)
}
}
transform_volumes <-function(data){
# Locate the relevant information
edge_nodes <- data$trafficData$volume$byHour$edges
# repeat for every row in the data
for (i in edge_nodes) {
x <- i %>%
# clean the data for one row
map(as_tibble) %>%
list_rbind() %>%
mutate(from = map_chr(from,1, .default = NA_character_)) %>%
mutate(from = as_datetime(from, tz = "UTC")) %>%
mutate(to = map_chr(to,1, .default = NA_character_)) %>%
mutate(to = as_datetime(to, tz = "UTC")) %>%
unnest_wider(total)
# Append the results
df <- rbind(df, x)
}
}
transform_volumes(test)
edge_nodes <- data$trafficData$volume$byHour$edges
# repeat for every row in the data
for (i in edge_nodes) {
x <- i %>%
# clean the data for one row
map(as_tibble) %>%
list_rbind() %>%
mutate(from = map_chr(from,1, .default = NA_character_)) %>%
mutate(from = as_datetime(from, tz = "UTC")) %>%
mutate(to = map_chr(to,1, .default = NA_character_)) %>%
mutate(to = as_datetime(to, tz = "UTC")) %>%
unnest_wider(total)
# Append the results
df <- rbind(df, x)
}
# Create an empty df
df <- data_frame(
from = as_datetime(character(0), tz = "UTC"),
to = as_datetime(character(0), tz = "UTC"),
volume = integer(0)
)
# Create an empty df
df <- data_frame(
from = as_datetime(character(0), tz = "UTC"),
to = as_datetime(character(0), tz = "UTC"),
volume = integer(0)
)
df<- data.frame()
